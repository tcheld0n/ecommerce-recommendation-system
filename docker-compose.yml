services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bookstore"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./uploads:/app/uploads
      - ./services/api-gateway/api_gateway.py:/app/api_gateway.py
    environment:
      - CATALOG_SERVICE_URL=http://catalog-service:8001
      - AUTH_SERVICE_URL=http://auth-service:8002
      - USERS_SERVICE_URL=http://users-service:8003
      - CART_SERVICE_URL=http://cart-service:8004
      - ORDERS_SERVICE_URL=http://orders-service:8005
      - PAYMENT_SERVICE_URL=http://payment-service:8006
      - RECOMMENDATION_SERVICE_URL=http://recommendation-service:8007
      - SHIPPING_SERVICE_URL=http://shipping-service:8008
    depends_on:
      - catalog-service
      - auth-service
      - users-service
      - cart-service
      - orders-service
      - payment-service
      - recommendation-service
      - shipping-service

  # Catalog Service
  catalog-service:
    build: ./services/catalog-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./import_csv_only.py:/app/import_csv_only.py
      - ./livros.csv:/app/livros.csv
      - ./services/catalog-service/catalog_service.py:/app/catalog_service.py

  # Auth Service
  auth-service:
    build: ./services/auth-service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./services/auth-service/auth_service.py:/app/auth_service.py

  # Users Service
  users-service:
    build: ./services/users-service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas

  # Cart Service
  cart-service:
    build: ./services/cart-service
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - REDIS_URL=redis://redis:6379/0
      - CATALOG_SERVICE_URL=http://catalog-service:8001
      - AUTH_SERVICE_URL=http://auth-service:8002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./services/cart-service/cart_service.py:/app/cart_service.py

  # Orders Service
  orders-service:
    build: ./services/orders-service
    ports:
      - "8005:8005"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - CART_SERVICE_URL=http://cart-service:8004
      - CATALOG_SERVICE_URL=http://catalog-service:8001
      - AUTH_SERVICE_URL=http://auth-service:8002
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas

  # Payment Service
  payment-service:
    build: ./services/payment-service
    ports:
      - "8006:8006"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - AUTH_SERVICE_URL=http://auth-service:8002
      - ORDERS_SERVICE_URL=http://orders-service:8005
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas

  # Recommendation Service
  recommendation-service:
    build: ./services/recommendation-service
    ports:
      - "8007:8007"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - REDIS_URL=redis://redis:6379/0
      - AUTH_SERVICE_URL=http://auth-service:8002
      - CATALOG_SERVICE_URL=http://catalog-service:8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./ml:/app/ml

  # Celery Worker
  celery:
    build: ./services/recommendation-service
    command: celery -A tasks.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./ml:/app/ml
      - ./tasks:/app/tasks

  # Shipping Service
  shipping-service:
    build: ./services/shipping-service
    ports:
      - "8008:8008"
    # Use default CORS_ORIGINS from core.config (or set JSON string, e.g. ["http://localhost:3000","http://localhost:5173"])
    environment: []
    restart: unless-stopped
    depends_on: []
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./services/shipping-service/shipping_service.py:/app/shipping_service.py
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8008/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery Beat
  celery-beat:
    build: ./services/recommendation-service
    command: celery -A tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/bookstore
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./core:/app/core
      - ./models:/app/models
      - ./schemas:/app/schemas
      - ./ml:/app/ml
      - ./tasks:/app/tasks

volumes:
  postgres_data:
  redis_data: